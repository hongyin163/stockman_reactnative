var alt= require('./alt');
//import {createActions} from 'alt/utils/decorators';

//@createActions(flux)
var techs=[{"code":"T0001","name":"macd","description":"<h3>指数平滑异同平均线</h3>\n<p> MACD指标是由两线一柱组合起来形成，快速线为DIF，慢速线为DEA，柱状图为MACD。 在各类投资中，有以下方法供投资者参考：</p> \n<ol>\n<li>当DIF和MACD均大于0(即在图形上表示为它们处于零线以上)并向上移动时，一般表示为行情处于多头行情中，可以买入开仓或多头持仓;</li>\n<li>当DIF和MACD均小于0(即在图形上表示为它们处于零线以下)并向下移动时，一般表示为行情处于空头行情中，可以卖出开仓或观望。</li>\n<li>当DIF和MACD均大于0(即在图形上表示为它们处于零线以上)但都向下移动时，一般表示为行情处于下跌阶段，可以卖出开仓和观望;</li>\n<li>当DIF和MACD均小于0时(即在图形上表示为它们处于零线以下)但向上移动时，一般表示为行情即将上涨，股票将上涨，可以买入开仓或多头持仓。</li>\n</ol>","fields":"[{name:'diff'},{name:'dea'},{name:'bar'}]","table_name":"macd","algorithm_script":"{\n    c1:12,\n    c2:26,\n    m:9,\n    data:[],\n    emaC1 : [], \n    emaC2 : [], \n    diffEmaM :[],\n    i:1,\n    calculate: function (newData) {\n        var me = this;\n        if (newData.length == 0)\n            return [];\n\n        for (var z = 0; z < newData.length; z++) {\n            me.data.push(newData[z]);\n        }\n\n        var macd = [];\n\n     \n\n        //EMA（12）= 前一日EMA（12）×11/13＋今日收盘价×2/13\n        //EMA（26）= 前一日EMA（26）×25/27＋今日收盘价×2/27\n        //DIFF=今日EMA（12）- 今日EMA（26）\n        //DEA（MACD）= 前一日DEA×8/10＋今日DIF×2/10 \n        //BAR=2×(DIFF－DEA)\n        var diff = 0, dea = 0, bar = 0;\n        if (me.i == 1) {\n            macd.push([me.data[0][0], diff, dea, bar]);\n            me.emaC1.push(me.data[0][2]);\n            me.emaC2.push(me.data[0][2]);\n            me.diffEmaM.push(0);\n        }\n\n        for (me.i; me.i < me.data.length; me.i++) {\n            var ema1 = me.emaC1[me.i - 1];\n            var ema2 = me.emaC2[me.i - 1];\n            var ema3 = me.getEma(me.data[me.i][2], ema1, me.c1, me.i);//ema1 * (c1 - 1) / (c1 + 1) + data[i][2] * (2 / (c1 + 1));\n            var ema4 = me.getEma(me.data[me.i][2], ema2, me.c2, me.i); //ema2 * (c2 - 1) / (c2 + 1) + data[i][2] * (2 / (c2 + 1));\n            me.emaC1.push(ema3);\n            me.emaC2.push(ema4);\n\n            diff = me.getEmaAvg(me.emaC1, me.c1, me.i) - me.getEmaAvg(me.emaC2, me.c2, me.i);\n\n            //指数移动平均\n            var diffEma1 = me.diffEmaM[me.i - 1];\n            var diffEma = me.getEma(diff, diffEma1, me.m, me.i);// diffEma1 * (m - 1) / (m + 1) + diff * (2 / (m + 1));\n            me.diffEmaM.push(diffEma);\n            dea = me.getEmaAvg(me.diffEmaM, me.m, me.i);//macd[i - 1][1] * (m - 1) / (m + 1) + diff * (2 / (m + 1));\n\n            //简单移动平均\n            //diffEmaM.push(diff);\n            //dea = me.getAvg2(me.m, diffEmaM, i);\n\n            bar = 2 * (diff - dea);\n\n            macd.push([me.data[me.i][0], diff.toFixed(2), dea.toFixed(2), bar.toFixed(2)]);\n        }\n        return macd;\n    },\n    cutdownContext: function (count) {\n        var me = this;\n        if (count == 0 || count == 1) {\n            me.data = [];\n            me.emaC1 = [];\n            me.emaC2 = [];\n            me.diffEmaM = [];\n            me.i = 1;\n        } else {\n            me.data.splice(0, me.i - count);\n            me.emaC1.splice(0, me.i - count);\n            me.emaC2.splice(0, me.i - count);\n            me.diffEmaM.splice(0, me.i - count);\n            me.i = count;\n        }\n    },\n    getEma: function (close, ema_pr, c1, i) {\n        return ema_pr * (c1 - 1) / (c1 + 1) + close * (2 / (c1 + 1));\n    },\n    getEmaAvg: function (ema, c1, i) {\n        var v = 0;\n        if (i >= c1) {\n            var n = 0;\n            for (j = 0; j < c1; j++) {\n                n += ema[i - j];\n            }\n            v = n / c1;\n            return v;\n        } else {\n            return ema[i];\n        }\n\n    },\n    getState:function(last){\n        var takeCount = last.length >= 4 ? 4 : last.length;        \n       \n        var ixs=[];       \n        for(var i=last.length-takeCount;i<last.length;i++){\n            ixs.push(last[i]);\n        }\n\n        var s= last.sort(function(a,b){\n            return a[3]-b[3];\n        });\n        var max = s[s.length-1][3];\n        var min = s[0][3];\n        var x = (max - min) / takeCount;\n\n        var ixList=[];\n        for(var j=0;j<ixs.length;j++){\n            ixList.push([j*x,ixs[j][3]]);\n        }\n\n        var avg = Ext.getSlope(ixList);\n\n        if (avg > 0)\n        {\n            return IndexState.Up;\n        }\n        else if (avg < 0)\n        {\n            return IndexState.Down;\n        }\n        else\n        {\n            return IndexState.Warn;\n        }\n    },\n    getTag:function(last){\n        var takeCount = last.length >= 4 ? 4 : last.length;        \n       \n        var ixs=[];\n       \n        for(var i=last.length-takeCount;i<last.length;i++){\n            ixs.push(last[i]);\n        }\n\n        var s= last.sort(function(a,b){\n            return a[3]-b[3];\n        });\n\n        var max = s[s.length-1][3];\n        var min = s[0][3];\n        var x = (max - min) / takeCount;\n\n        var ixList=[];\n        for(var j=0;j<ixs.length;j++){\n            ixList.push([j*x,ixs[j][3]]);\n        }\n\n        //判断是否有交叉，有交叉，给警告\n        var isCorss=false;\n        if (takeCount >= 2)\n        {\n            \n            var first=  ixs[0][3];\n            var second= ixs[ixs.length-1][3];\n            if(first<=0&&second>=0)\n                isCorss=true;\n        }\n\n        var avg = Ext.getSlope(ixList);\n        if (isCorss && avg > 0)\n            return \"MACD金叉\";\n        return '';\n    }\n}","chart_config":"{\n    config: {\n         name:'macd',\n         store: {\n            fields: [\n                { name: 'date', mapping: 0 },\n                { name: 'diff', mapping: 1 },\n                { name: 'dea', mapping: 2 },\n                { name: 'macd', mapping: 3 }\n            ]\n        },\n        labels: [\n            {\n                color: '#FF0080',\n                text: 'diff',\n                margin: 40\n            },\n            {\n                color: '#3D7878',\n                text: 'dea',\n                margin: 40\n            }\n        ],\n        titleConfig: {\n            title: 'MACD',\n            x:80\n        },\n        axes: [{\n            type: 'numeric',\n            position: 'left',\n            title: {\n                //text: 'Sample Values',\n                fontSize: 15\n            },\n            fields: ['diff', 'dea', 'macd'],\n            style: {\n                floating: true,\n                axisLine: false,\n                strokeStyle: '#666'\n            },\n            label: {\n                fillStyle: '#666',\n                fontWeight: '700'\n            },\n            grid: true\n            ,\n            background: {\n                fill: {\n                    type: 'linear',\n                    degrees: 180,\n                    stops: [\n                        {\n                            offset: 0.3,\n                            color: 'white'\n                        },\n                        {\n                            offset: 1,\n                            color: 'rgba(255,255,255,0)'\n                        }\n                    ]\n                }\n            }\n        }, {\n            type: 'category',\n            hidden: true,\n            position: 'bottom',\n            grid: true,\n            //visibleRange: [0.6, 1],\n            title: {\n                //text: 'Sample Values',\n                fontSize: 15\n            },\n            fields: 'date'\n        }],\n        series: [{\n            type: 'line',\n            xField: 'date',\n            yField: 'diff',\n            title: 'Line',\n            style: {\n                smooth: true,\n                stroke: '#FF0080'\n            }\n        }, {\n            type: 'line',\n            xField: 'date',\n            yField: 'dea',\n            title: 'Line',\n            style: {\n                smooth: true,\n                stroke: '#3D7878'\n            }\n        }, {\n            type: 'bar',\n            xField: 'date',\n            yField: 'macd',\n            style: {\n                fill: 'blue',\n                minBarWidth: 3,\n                minGapWidth: 1\n            }\n            ,\n            renderer: function (sprite, config, rendererData, index) {\n                var data = rendererData.store.getData().items[index];\n                if (!data || !data.data)\n                    return {}\n                if (data.data.macd >= 0) {\n                    var obj = {\n                        strokeStyle: '#c00',\n                        fill: '#c00',\n                    };\n                    return obj;\n                } else {\n                    var obj = {\n                        strokeStyle: '#006030',\n                        fill: '#006030',\n                    };\n                    return obj;\n                }\n            }\n        }]\n    }\n}","parameter":"{c1:12,c2:26,m:9}","state":1,"version":0.0,"sort":null,"group_code":"G0001","group_name":"趋向指标"},{"code":"T0002","name":"kdj","description":"<h3>随机指标</h3>\n<p>KDJ指标由3根曲线组成，移动速度最快的是J线，其次是K线，最慢的是D线。下面来说一下KDJ的使用要领。</p>\n<ol>\n<li>KDJ指标的区间主要分为3个小部分，即20以下、20—80之间和80以上。其中20以下的区间为超卖区；80以上的区域为超买区；20—80之间的区域为买卖平衡区。</li>\n<li>如果K、D、J值都大于50时，为多头市场，后市看涨；如果K、D、J值都小于50时，为空头市场，后市看空。</li>\n<li>KDJ指标图形中，D曲线运行速度最慢，敏感度最低；其次是K曲线，J曲线敏感度最强。</li>\n<li>当J大于K、K大于D时，即3条指标曲线呈多头排列，显示当前为多头市场；当3条指标出现黄金交叉时，指标发出买入信号。</li>\n<li>当3条指标曲线呈空头排列时，表示短期是下跌趋势；3条曲线出现死亡交叉时，指标发出卖出信号。</li>\n<li>如果KD线交叉突破反复在50左右震荡，说明行情正在整理，此时要结合J值，观察KD偏离的动态，再决定投资行动。</li>\n</ol>","fields":"[{name:'k'},{name:'d'},{name:'j'}]","table_name":"kdj","algorithm_script":"{\n    n: 9,\n    i: 1,\n    data: [],\n    ks: [],\n    ds: [],\n    calculate: function (newData) {\n        var me = this;\n        var kdj = [];\n\n        //n日RSV=（Cn－Ln）÷（Hn－Ln）×100\n        //K值=2/3×前一日 K值＋1/3×当日RSV\n        //D值=2/3×前一日D值＋1/3×当日K值\n        for (var z = 0; z < newData.length; z++) {\n            me.data.push(newData[z]);\n        }\n        var k = 50, d = 50, j = 50;\n        var rsv = 50;\n\n        if (me.i == 1) {\n            me.ks.push(k);\n            me.ds.push(d);\n            kdj.push([me.data[0][0], k, d, j]);\n        }\n       \n        for (me.i; me.i < me.data.length; me.i++) {\n            rsv = me.getRsvValue(me.data, me.i, me.n);\n            k = (2 / 3) * (me.ks[me.i - 1]) + (1 / 3) * rsv;\n            d = (2 / 3) * (me.ds[me.i - 1]) + (1 / 3) * k;\n            j = (3 * k) - (2 * d);\n\n            me.ks.push(k);\n            me.ds.push(d);\n            kdj.push([me.data[me.i][0], k.toFixed(2), d.toFixed(2), j.toFixed(2)]);\n        }\n\n        return kdj;\n    },\n    cutdownContext: function (count) {\n        var me = this;\n        if (count == 0 || count == 1) {\n            me.data = [];\n            me.ks = [];\n            me.ds = [];\n            me.i = 1;\n        } else {\n            me.ks.splice(0, me.i - count);\n            me.ds.splice(0, me.i - count);\n            me.data.splice(0, me.i - count);\n            me.i = count;\n        }\n    },\n    getRsvValue: function (data, i, c1) {\n        //n日RSV=（Cn－Ln）÷（Hn－Ln）×100\n        if (i >= c1) {\n            var Cn = 0, Ln = 0, Hn = 0;\n            Cn = data[i][2];\n            Ln = Hn = Cn;\n            var j = i;\n            for (j = i - 1; j >= i - c1; j--) {\n                if (data[j][2] > Hn) {\n                    Hn = data[j][2];\n                }\n                if (data[j][2] < Ln) {\n                    Ln = data[j][2];\n                }\n            }\n            var rsv = 100 * ((Cn - Ln) / (Hn - Ln));\n            return rsv;\n        }\n        return 50;\n    },\n    getState:function(last){\n        var takeCount = last.length >= 3 ? 3 : last.length;        \n       \n        var ixs=[];\n       \n        for(var i=last.length-takeCount;i<last.length;i++){\n            ixs.push(last[i]);\n        }\n\n        var s= last.sort(function(a,b){\n            return a[3]-b[3];\n        });\n        var max = s[s.length-1][3];\n        var min = s[0][3];\n        var x = (max - min) / takeCount;\n\n        var ixList=[];\n        for(var j=0;j<ixs.length;j++){\n            ixList.push([j*x,ixs[j][3]]);\n        }\n\n        //判断是否有交叉，有交叉，给警告\n        var isCorss=false;\n        if (takeCount >= 2)\n        {\n            isCorss = Ext.isCross(\n                {\n                    X : (takeCount - 1) * x,\n                    Y : ixs[takeCount - 1][1]\n                },\n                {\n                    X : (takeCount - 2) * x,\n                    Y : ixs[takeCount - 2][1]\n                },\n                {\n                    X : (takeCount - 1) * x,\n                    Y : ixs[takeCount - 1][2]\n                },\n                {\n                    X : (takeCount - 2) * x,\n                    Y : ixs[takeCount - 2][2]\n                }\n            );\n           \n        }\n\n        var avg = Ext.getSlope(ixList);\n        if (isCorss && avg > 0)\n            return IndexState.Up;\n        if (isCorss && avg <0)\n            return IndexState.Down;\n        if (avg > 0)\n        {\n            return IndexState.Up;\n        }\n        else if (avg < 0)\n        {\n            return IndexState.Down;\n        }\n        else\n        {\n            return IndexState.Warn;\n        }\n        return IndexState.Warn;\n    },\n    getTag:function(last){\n        var takeCount = last.length >= 3 ? 3 : last.length;        \n       \n        var ixs=[];\n       \n        for(var i=last.length-takeCount;i<last.length;i++){\n            ixs.push(last[i]);\n        }\n\n        var s= last.sort(function(a,b){\n            return a[3]-b[3];\n        });\n        var max = s[s.length-1][3];\n        var min = s[0][3];\n        var x = (max - min) / takeCount;\n\n        var ixList=[];\n        for(var j=0;j<ixs.length;j++){\n            ixList.push([j*x,ixs[j][3]]);\n        }\n\n        //判断是否有交叉，有交叉，给警告\n        var isCorss=false;\n        if (takeCount >= 2)\n        {\n            isCorss = Ext.isCross(\n                {\n                    X : (takeCount - 1) * x,\n                    Y : ixs[takeCount - 1][1]\n                },\n                {\n                    X : (takeCount - 2) * x,\n                    Y : ixs[takeCount - 2][1]\n                },\n                {\n                    X : (takeCount - 1) * x,\n                    Y : ixs[takeCount - 1][2]\n                },\n                {\n                    X : (takeCount - 2) * x,\n                    Y : ixs[takeCount - 2][2]\n                }\n            );\n            var avg = Ext.getSlope(ixList);\n            if (isCorss && avg > 0)        \n                return \"KDJ金叉\";\n        }  \n        return \"\";\n    }\n}","chart_config":" {\n    config: {\n        name:'kdj',\n        labels: [\n            {\n                color: '#FF0080',\n                text: 'k',\n                margin: 40\n            },\n            {\n                color: '#FF8000',\n                text: 'd',\n                margin: 40\n            },\n            {\n                color: '#3D7878',\n                text: 'j',\n                margin: 40\n            }\n        ],\n        titleConfig: {\n            title: 'KDJ',\n            x: 130\n        },\n         store: {\n            fields: [\n                { name: 'date', mapping: 0 },\n                { name: 'k', mapping: 1 },\n                { name: 'd', mapping: 2 },\n                { name: 'j', mapping: 3 }\n            ]\n        },\n        axes: [{\n            type: 'numeric',\n            position: 'left',\n            title: {\n                //text: 'Sample Values',\n                fontSize: 15\n            },\n            fields: ['k', 'd', 'j'],\n            style: {\n                floating: true,\n                axisLine: false,\n                strokeStyle: '#666'\n            },\n            label: {\n                fillStyle: '#666',\n                fontWeight: '700'\n            },\n            grid: true\n            ,\n            background: {\n                fill: {\n                    type: 'linear',\n                    degrees: 180,\n                    stops: [\n                        {\n                            offset: 0.3,\n                            color: 'white'\n                        },\n                        {\n                            offset: 1,\n                            color: 'rgba(255,255,255,0)'\n                        }\n                    ]\n                }\n            }\n        }, {\n            type: 'category',\n            hidden: true,\n            position: 'bottom',\n            grid: false,\n            //visibleRange: [0.6, 1],\n            title: {\n                //text: 'Sample Values',\n                fontSize: 15\n            },\n            fields: 'date'\n        }],\n        series: [{\n            type: 'line',\n            xField: 'date',\n            yField: 'k',\n            title: 'Line',\n            style: {\n                stroke: '#FF0080'\n            }\n        }, {\n            type: 'line',\n            xField: 'date',\n            yField: 'd',\n            title: 'Line',\n            style: {\n                stroke: '#FF8000'\n            }\n        }, {\n            type: 'line',\n            xField: 'date',\n            yField: 'j',\n            title: 'Line',\n            style: {\n                stroke: '#3D7878'\n            }\n        }]\n    },\n    initialize: function () {\n        var me = this;\n\n        me.callParent();\n\n        me.on('loaded', function (chart, data, range) {\n            me.addChartThreshod(80);\n            me.addChartThreshod(20);\n        });\n       \n    }\n}","parameter":"{n:9}","state":1,"version":0.0,"sort":null,"group_code":"G0004","group_name":"反趋向指标"},{"code":"T0003","name":"rsi","description":"<h3>相对强弱指标</h3>\n<p>RSI是由 Wells Wider 创制的一种通过特定时期内股价的变动情况计算市场买卖力量对比,来判断股价内部本质强弱、推测价格未来的变动方向的技术指标。</p>\n<ol>\n<li>白色的短期RSI值在20以下,由下向上交叉黄色的长期RSI值时为买入信号。  </li>\n<li>白色的短期RSI值在80以上,由上向下交叉黄色的长期RSI值时为卖出信号。 </li>\n<li>短期RSI值由上向下突破50,代表股价已经转弱。 </li>\n<li>短期RSI值由下向上突破50,代表股价已经转强。 </li>\n<li>当RSI值高于80进入超买区,股价随时可能形成短期回档。 </li>\n<li>当RSI值低于20进入超卖区,股价随时可能形成短期反弹。 </li>\n<li>股价一波比一波高,而RSI一波比一波低。形成顶背离,行情可能反转下跌。用RSI判断底部图形较不明显。 </li>\n<li>将RSI的两个连续低点Ａ、Ｂ连成一条直线,当RSI向下跌破这条线时,为卖出信号。 </li>\n<li>将RSI的两个连续峰顶Ｃ、Ｄ连成一条直线,当RSI向上突破这条线时,为买入信号。 </li>\n<li>为了确认RSI是否进入超买区超卖区或是否穿越了50中界线．应尽量使用长期RSI,以减少骗线的发生。</li>\n</ol> \n","fields":"[{name:'r1'},{name:'r2'},{name:'r3'}]","table_name":"rsi","algorithm_script":"{\n    c1: 6,\n    c2: 12,\n    c3: 24,\n    i:0,\n    data:[],\n    calculate: function (newData) {\n        var me = this;\n        if (newData.length == 0)\n            return [];\n\n        for (var z = 0; z < newData.length; z++) {\n            me.data.push(newData[z]);\n        }\n        var rsi = [];\n\n        //6涨跌额 7涨跌幅\n\n        for (me.i; me.i < me.data.length; me.i++) {\n\n            rsi.push([me.data[me.i][0], me.getRsiValue(me.data, me.i, me.c1), me.getRsiValue(me.data, me.i, me.c2), me.getRsiValue(me.data, me.i, me.c3)]);\n\n        }\n\n        return rsi;\n    },\n    cutdownContext: function (count) {\n        var me = this;\n        me.data.splice(0, me.i - count);\n        me.i = count;\n    },\n    getRsiValue: function (data, i, c1) {\n        if (i >= c1) {\n            var up = 0, down = 0;\n            for (var j = i; j > i - c1; j--) {\n                if (data[j][6] > 0) {\n                    up += data[j][6];\n                } else {\n                    down += (-data[j][6]);\n                }\n            }\n            if(up + down==0){\n                return 50;\n            }\n            var rsi = 100 * up / (up + down);\n            return rsi;\n        }\n        return 50;\n    },\n    getState:function(last){\n\n        var lastOne =last[last.length-1];\n        if (lastOne[3] > 80 || lastOne[3] < 20)\n            return IndexState.Warn;\n\n        var takeCount = last.length >= 4 ? 4 : last.length;\n        var ixs=[];       \n        for(var i=last.length-takeCount;i<last.length;i++){\n            ixs.push(last[i]);\n        }\n\n        var s= last.sort(function(a,b){\n            return a[2]-b[2];\n        });\n\n\n        var max = s[s.length-1][2];\n        var min = s[0][2];\n\n\n        var x = (max - min) / takeCount;\n\n        var ixList0=[],ixList1=[],ixList2=[];\n        for(var j=0;j<ixs.length;j++){\n            ixList0.push([j*x,ixs[j][1]]);\n            ixList1.push([j*x,ixs[j][2]]);\n            ixList2.push([j*x,ixs[j][3]]);\n        }\n      \n\n        var p0 = Ext.getSlope(ixList0);\n        var p1 = Ext.getSlope(ixList1);\n        var p2 = Ext.getSlope(ixList2);\n\n        if (p0 > 0 && p1 > 0)\n        {\n            return IndexState.Up;\n        }\n        else if (p0 < 0 && p1 < 0)\n        {\n            return IndexState.Down;\n        }\n        else\n        {\n            return IndexState.Down;\n        }\n    }\n}","chart_config":"{\n    config: {\n        name:'rsi',\n        labels: [\n             {\n                 color: '#FF0080',\n                 text: '6',\n                 margin: 40\n             },\n             {\n                 color: '#E1E100',\n                 text: '12',\n                 margin: 40\n             },\n             {\n                 color: '#3D7878',\n                 text: '24',\n                 margin: 40\n             }\n        ],\n        titleConfig: {\n            title: 'RSI',\n            x: 120\n        },\n        //width:120,\n        //docked: 'bottom',\n        store: {\n            fields: [\n                { name: 'date', mapping: 0 },\n                { name: 'r1', mapping: 1 },\n                { name: 'r2', mapping: 2 },\n                { name: 'r3', mapping: 3 }\n            ]\n        },\n        innerPadding: { top: 0, left: 0, right: 4, bottom: 0 },\n        background: 'white',\n        axes: [{\n            type: 'numeric',\n            position: 'left',\n            title: {\n                //text: 'Sample Values',\n                fontSize: 15\n            },\n            fields: ['r1', 'r2', 'r3'],\n            style: {\n                floating: true,\n                axisLine: false,\n                strokeStyle: '#666',\n                estStepSize: 40\n            },\n            label: {\n                fillStyle: '#666',\n                fontWeight: '700'\n            },\n            grid: true\n            ,\n            background: {\n                fill: {\n                    type: 'linear',\n                    degrees: 180,\n                    stops: [\n                        {\n                            offset: 0.3,\n                            color: 'white'\n                        },\n                        {\n                            offset: 1,\n                            color: 'rgba(255,255,255,0)'\n                        }\n                    ]\n                }\n            }\n        }, {\n            type: 'category',\n            hidden: true,\n            position: 'bottom',\n            grid: true,\n            //visibleRange: [0.6, 1],\n            title: {\n                //text: 'Sample Values',\n                fontSize: 15\n            },\n            fields: 'date'\n        }],\n        series: [{\n            type: 'line',\n            xField: 'date',\n            yField: 'r1',\n            title: 'Line',\n            style: {\n                stroke: '#FF0080'\n            }\n        }, {\n            type: 'line',\n            xField: 'date',\n            yField: 'r2',\n            title: 'Line',\n            style: {\n                stroke: '#E1E100'\n            }\n        }, {\n            type: 'line',\n            xField: 'date',\n            yField: 'r3',\n            title: 'Line',\n            style: {\n                stroke: '#3D7878'\n            }\n        }]\n    },\n    initialize: function () {\n        var me = this;\n\n        me.callParent();\n\n        me.on('loaded', function (chart, data, range) {\n            me.addChartThreshod(80);\n            me.addChartThreshod(20);\n        });\n        //this.on('resize',me.onChartResize);\n    }\n}","parameter":"{c1:6,c2:12,c3:24}","state":1,"version":0.0,"sort":null,"group_code":"G0003","group_name":"能量指标"},{"code":"T0004","name":"trix","description":"<h3>三重指数平滑平均线</h3>\n<p>TRIX指标是属于中长线指标，其最大的优点就是可以过滤短期波动的干扰，以避免频繁操作而带来的失误和损失。因此TRIX指标最适合于对行情的中长期走势的研判。在股市软件上TRIX指标有两条线，一条线为TRIX线，另一条线为TRMA线。TRIX指标的一般研判标准主要集中在TRIX线和TRMA线的交叉情况的考察上。其基本分析内容如下：</p>\n<ol>\n<li>当TRIX线一旦从下向上突破TRMA线，形成“金叉”时，预示着股价开始进入强势拉升阶段，投资者应及时买进股票。</li>\n<li>当TRIX线向上突破TRMA线后，TRIX线和TRMA线同时向上运动时，预示着股价强势依旧，投资者应坚决持股待涨。</li>\n<li>当TRIX线在高位有走平或掉头向下时，可能预示着股价强势特征即将结束，投资者应密切注意股价的走势，一旦K线图上的股价出现大跌迹象，投资者应及时卖出股票。</li>\n<li>当TRIX线在高位向下突破TRMA线，形成“死叉”时，预示着股价强势上涨行情已经结束，投资者应坚决卖出余下股票，及时离场观望。</li>\n<li>当TRIX线向下突破TRMA线后，TRIX线和TRMA线同时向下运动时，预示着股价弱势特征依旧，投资者应坚决持币观望。</li>\n<li>当TRIX线在TRMA下方向下运动很长一段时间后，并且股价已经有较大的跌幅时，如果TRIX线在底部有走平或向上勾头迹象时，一旦股价在大的成交量的推动下向上攀升时，投资者可以及时少量地中线建仓。</li>\n<li>当TRIX线再次向上突破TRMA线时，预示着股价将重拾升势，投资者可及时买入，持股待涨。</li>\n<li>TRIX指标不适用于对股价的盘整行情的研判。</li>\n</ol>","fields":"[{name:'trix'},{name:'trma'}]","table_name":"trix","algorithm_script":"{\n    c1: 10,\n    c2: 20,\n    ax: [], bx: [], tr: [],\n    axEma: [], bxEma: [], trEma: [],\n    trix: [],\n    trma: [],\n    i: 1,\n    data: [],\n    calculate: function (newData) {\n        var me = this;\n        if (newData.length == 0)\n            return [];\n\n        for (var z = 0; z < newData.length; z++) {\n            me.data.push(newData[z]);\n        }\n        var tech = [];\n        //1、计算N天的收盘价的指数平均AX\n        //AX=（I日）收盘价×2÷（N＋1）＋（I－1）日AX ×（N－1）/（N＋1）\n        //2、计算N天的AX的指数平均BX\n        //BX=（I日）AX×2÷（N＋1）＋（I－1）日BX ×（N－1）/（N＋1）\n        //3、计算N天的BX的指数平均TRIX\n        //TRIX=（I日）BX×2÷（N＋1）＋（I－1）日TAIX ×（N－1）/（N＋1）\n        //4、计算TRIX的m日移动平均TRMA\n        //var ax = [], bx = [], tr = [], trix = [], trma = [];\n        //var axEma = [], bxEma = [], trEma = [];\n        //var trma = [];\n        var x = 0;\n        //第一次平均\n        if (me.i == 1) {\n            me.ax.push(me.data[0][2]);\n            me.axEma.push(1);\n        }\n        var j = me.i;\n        for (j; j < me.data.length; j++) {\n            var a0 = me.getEma(me.data[j][2], me.ax[j - 1], me.c1, j);\n            me.ax.push(a0);\n            var a1 = me.getEmaAvg(me.ax, me.c1, j);\n            me.axEma.push(a1);\n            //delete ax;\n        }\n        //第二次平均\n        if (me.i == 1) {\n            me.bx.push(me.ax[0]);\n            me.bxEma.push(me.axEma[0]);\n        }\n        j = me.i;\n        for (j; j < me.axEma.length; j++) {\n            var a2 = me.getEma(me.axEma[j], me.bx[j - 1], me.c1, j);\n            me.bx.push(a2);\n\n            var a3 = me.getEmaAvg(me.bx, me.c1, j);\n            me.bxEma.push(a3);\n        }\n        //第三次平均\n        if (me.i == 1) {\n            me.tr.push(me.bx[0]);\n            me.trEma.push(me.bxEma[0]);\n        }\n        j = me.i;\n        for (j; j < me.bxEma.length; j++) {\n            var a = me.getEma(me.bxEma[j], me.tr[j - 1], me.c1, j);\n            me.tr.push(a);\n\n            var y = me.getEmaAvg(me.tr, me.c1, j);\n            me.trEma.push(y);\n        }\n        //计算trix\n        if (me.i == 1) {\n            me.trix.push(0);\n        }\n        j = me.i;\n        for (j; j < me.trEma.length; j++) {\n            var x1 = (me.trEma[j] - me.trEma[j - 1]) / me.trEma[j - 1] * 100;\n            me.trix.push(x1);\n        }\n        //计算TRMA\n        if (me.i == 1) {\n            me.trma.push(me.trix[0]);\n        }\n        j = me.i;\n        for (j; j < me.trix.length; j++) {\n            var x2 = me.getAvg2(me.c2, me.trix, j);\n            me.trma.push(x2);\n        }\n        if (me.i == 1) {\n            tech.push([me.data[0][0], me.trix[0], me.trma[0]]);\n        }\n        for (me.i; me.i < me.data.length; me.i++) {\n            tech.push([me.data[me.i][0], me.trix[me.i], me.trma[me.i]]);\n        }\n\n        return tech;\n    },\n    cutdownContext: function (count) {\n        var me = this;\n        if (count == 0 || count == 1) {\n            me.ax = [];\n            me.bx = [];\n            me.tr = [];\n            me.axEma = [];\n            me.bxEma = [];\n            me.trEma = [];\n            me.trix = [];\n            me.trma = [];\n            me.data = [];\n            me.i = 1;\n        } else {\n            me.ax.splice(0, me.i - count);\n            me.bx.splice(0, me.i - count);\n            me.tr.splice(0, me.i - count);\n            me.axEma.splice(0, me.i - count);\n            me.bxEma.splice(0, me.i - count);\n            me.trEma.splice(0, me.i - count);\n            me.trix.splice(0, me.i - count);\n            me.trma.splice(0, me.i - count);\n            me.data.splice(0, me.i - count);\n            me.i = count;\n        }\n    },\n    getTrixAvg: function (n, data, i, ax) {\n        var me = this;\n        var x = data[i][2];\n        if (i >= n && i > 0 && (i - 1) < ax.length) {\n            x = data[i][2] * 2 / (n + 1) + ax[i - 1] * (n - 1) / (n + 1);\n        }\n        return x;\n    },\n    getTrixAvg2: function (n, ax, i, bx) {\n        var me = this;\n        var x = ax[i];\n        if (i >= n && i > 0 && (i - 1) < bx.length) {\n            x = ax[i] * 2 / (n + 1) + bx[i - 1] * (n - 1) / (n + 1);\n        }\n        return x;\n    },\n    getAvg2: function (c1, tr, i) {\n        var v = 0;\n        if (i >= c1) {\n            var n = 0;\n            for (var j = 0; j < c1; j++) {\n                n += tr[i - j];\n            }\n            v = n / c1;\n            return v;\n        } else {\n            return tr[i];\n        }\n    },\n    getEma: function (close, emaPr, c1, i) {\n        return emaPr * (c1 - 1) / (c1 + 1) + close * (2 / (c1 + 1));\n    },\n    getEmaAvg: function (ema, c1, i) {\n        var v = 0;\n        if (i >= c1) {\n            var n = 0;\n            for (var j = 0; j < c1; j++) {\n                n += ema[i - j];\n            }\n            v = n / c1;\n            return v;\n        } else {\n            return ema[i];\n        }\n\n    },\n    getState: function (last) {\n        var takeCount = last.length >= 4 ? 4 : last.length;\n\n        var ixs = [];\n\n        for (var i = last.length - takeCount; i < last.length; i++) {\n            ixs.push(last[i]);\n        }\n\n        var s = last.sort(function (a, b) {\n            return a[2] - b[2];\n        });\n\n\n        var max = s[s.length - 1][2];\n        var min = s[0][2];\n        var x = (max - min) / takeCount;\n        //double[][] ixList = ixs.Select((ix, i) => new double[] { i * x, ix[1] }).ToArray();\n        var ixList = [];\n        for (var j = 0; j < ixs.length; j++) {\n            ixList.push([j * x, ixs[j][1]]);\n        }\n\n        //判断是否有交叉，有交叉，给警告\n        var isCorss=false;\n        if (takeCount >= 2) {\n            isCorss = Ext.isCross(\n                {\n                    X: (takeCount - 1) * x,\n                    Y: ixs[takeCount - 1][1]\n                },\n                {\n                    X: (takeCount - 2) * x,\n                    Y: ixs[takeCount - 2][1]\n                },\n                {\n                    X: (takeCount - 1) * x,\n                    Y: ixs[takeCount - 1][2]\n                },\n                {\n                    X: (takeCount - 2) * x,\n                    Y: ixs[takeCount - 2][2]\n                }\n            );\n        }\n\n        var avg = Ext.getSlope(ixList);\n\n        if (isCorss && avg > 0)\n            return IndexState.Up;\n        if (isCorss && avg <0)\n            return IndexState.Down;\n\n        if (avg > 0) {\n            return IndexState.Up;\n        }\n        else if (avg < 0) {\n            return IndexState.Down;\n        }\n        else {\n            return IndexState.Warn;\n        }\n    },\n    getTag:function(last){\n        var takeCount = last.length >= 4 ? 4 : last.length;        \n       \n        var ixs=[];\n       \n        for(var i=last.length-takeCount;i<last.length;i++){\n            ixs.push(last[i]);\n        }\n\n        var s= last.sort(function(a,b){\n            return a[2]-b[2];\n        });\n\n        var max = s[s.length-1][2];\n        var min = s[0][2];\n        var x = (max - min) / takeCount;\n\n        var ixList=[];\n        for(var j=0;j<ixs.length;j++){\n            ixList.push([j*x,ixs[j][1]]);\n        }\n\n        //判断是否有交叉，有交叉，给警告\n        if (takeCount >= 2)\n        {\n            var isCorss = Ext.isCross(\n                {\n                    X : (takeCount - 1) * x,\n                    Y : ixs[takeCount - 1][1]\n                },\n                {\n                    X : (takeCount - 2) * x,\n                    Y : ixs[takeCount - 2][1]\n                },\n                {\n                    X : (takeCount - 1) * x,\n                    Y : ixs[takeCount - 1][2]\n                },\n                {\n                    X : (takeCount - 2) * x,\n                    Y : ixs[takeCount - 2][2]\n                }\n            );       \n\n            var avg = Ext.getSlope(ixList);\n            if (isCorss && avg > 0)\n                return \"TRIX金叉\";\n        }\n        return '';\n    }\n}","chart_config":"{\n    config: {\n        name:'trix',\n        labels: [\n            {\n                color: '#3D7878',\n                text: 'trix',\n                margin: 40\n            },\n            {\n                color: '#FF8000',\n                text: 'trma',\n                margin: 40\n            }\n        ],\n        titleConfig: {\n            title: 'TRIX',\n            x: 100\n        },\n         store: {\n            fields: [\n                { name: 'date', mapping: 0 },\n                { name: 'trix', mapping: 1 },\n                { name: 'trma', mapping: 2 }\n            ]\n        },\n        innerPadding: { top: 0, left: 0, right: 4, bottom: 0 },\n        background: 'white',\n        axes: [{\n            type: 'numeric',\n            position: 'left',\n            title: {\n                fontSize: 15\n            },\n            fields: ['trix', 'trma'],\n            style: {\n                floating: true,\n                axisLine: false,\n                strokeStyle: '#666'\n            },\n            label: {\n                fillStyle: '#666',\n                fontWeight: '700'\n            },\n            grid: true\n            ,\n            background: {\n                fill: {\n                    type: 'linear',\n                    degrees: 180,\n                    stops: [\n                        {\n                            offset: 0.3,\n                            color: 'white'\n                        },\n                        {\n                            offset: 1,\n                            color: 'rgba(255,255,255,0)'\n                        }\n                    ]\n                }\n            }\n        }, {\n            type: 'category',\n            hidden: true,\n            position: 'bottom',\n            title: {\n                fontSize: 15\n            },\n            fields: 'date'\n        }],\n        series: [{\n            type: 'line',\n            xField: 'date',\n            yField: 'trix',\n            style: {\n                stroke: '#3D7878'\n            }\n        }, {\n            type: 'line',\n            xField: 'date',\n            yField: 'trma',\n            style: {\n                stroke: '#FF8000'\n            }\n        }]\n    },\n    initialize: function () {\n        var me = this;\n\n        me.callParent();\n\n        //this.on('resize',me.onChartResize);\n    }\n}","parameter":"{c1:10,c2:20}","state":1,"version":0.0,"sort":null,"group_code":"G0001","group_name":"趋向指标"},{"code":"T0005","name":"dma","description":"<h3>平行线差指标</h3>\n<p>DMA是目前股市分析技术指标中的一种中短期指标，它常用于大盘指数和个股的研判。</p>\n买卖原则：\n<ol>\n<li>当DMA和AMA均大于0（即在图形上表示为它们处于零线以上）并向上移动时，一般表示为股市处于多头行情中，可以买入或持股；</li>\n<li>当DMA和AMA均小于0（即在图形上表示为它们处于零线以下）并向下移动时，一般表示为股市处于空头行情中，可以卖出股票或观望。</li>\n<li>当DMA和AMA均大于0（即在图形上表示为它们处于零线以上），但在经过一段比较长时间的向上运动后，如果两者同时从高位向下移动时，一般表示为股票行情处于退潮阶段，股票将下跌，可以卖出股票和观望；</li>\n<li>当DMA和AMA均小于0时（即在图形上表示为它们处于零线以下），但在经过一段比较长时间的的向下运动后，如果两者同时从低位向上移动时，一般表示为短期行情即将启动，股票将上涨，可以短期买进股票或持股待涨。</li>\n</ol>","fields":"[{name:'d1'},{name:'d2'}]","table_name":"dma","algorithm_script":"{\n    dif: [],\n    ama: [],\n    c1: 10,\n    c2: 50,\n    m: 6,\n    i: 0,\n    data: [],\n    calculate: function (newData) {\n        var me = this;\n        \n        //data格式，\n        //e[0],//日期\n        //e[1],//开盘 \n        //e[2],//收盘\n        //e[3],//最高\n        //e[4],//最低   \n        //e[5],//成交量\n        //e[6],//涨跌额\n        //e[7],//涨跌幅\n\n        //dif=10日均线-50日均线\n        //ama=10日均线\n        //debugger;\n\n\n        for (var j = 0; j < newData.length; j++) {\n            me.data.push(newData[j]);\n        }\n        var dma = [];\n        var price = [];\n        for (me.i; me.i < me.data.length; me.i++) {\n            \n            var a = me.getAvg(me.c1, me.data, me.i) - me.getAvg(me.c2, me.data, me.i);\n            me.dif.push(a);\n\n            var y = me.getAvg2(me.m, me.dif, me.i);\n            me.ama.push(y);\n\n            dma.push([me.data[me.i][0], me.dif[me.i].toFixed(2), me.ama[me.i].toFixed(2)]);\n        }\n        return dma;\n    },\n    cutdownContext: function(count) {\n        var me = this;\n        if (count == 0 || count == 1) {\n            me.data = [];\n            me.dif = [];\n            me.ama = [];\n            me.i = 0;\n        } else {\n            me.dif.splice(0, me.i - count);\n            me.ama.splice(0, me.i - count);\n            me.data.splice(0, me.i - count);\n            me.i = count;\n        }\n    },\n    getAvg: function (c1, data, i) {\n        if (i >= c1) {\n            var n = 0;\n            for (var j = 0; j < c1; j++) {\n                n += data[i - j][2];\n            }\n            return n / c1;\n        } else {\n            return data[i][2];\n        }\n    },\n    getAvg2: function (c1, tr, i) {\n        if (i >= c1) {\n            var n = 0;\n            for (var j = 0; j < c1; j++) {\n                n += tr[i - j];\n            }\n            return n / c1;\n        } else {\n            return tr[i];\n        }\n    },\n    getState:function(last){\n        var takeCount = last.length >= 4 ? 4 : last.length;        \n       \n        var ixs=[];\n       \n        for(var i=last.length-takeCount;i<last.length;i++){\n            ixs.push(last[i]);\n        }\n\n        var s= last.sort(function(a,b){\n            return a[2]-b[2];\n        });\n\n        var max = s[s.length-1][2];\n        var min = s[0][2];\n        var x = (max - min) / takeCount;\n\n        var ixList=[];\n        for(var j=0;j<ixs.length;j++){\n            ixList.push([j*x,ixs[j][1]]);\n        }\n\n        //判断是否有交叉，有交叉，给警告\n        var isCorss=false;\n        if (takeCount >= 2)\n        {\n            isCorss = Ext.isCross(\n                {\n                    X : (takeCount - 1) * x,\n                    Y : ixs[takeCount - 1][1]\n                },\n                {\n                    X : (takeCount - 2) * x,\n                    Y : ixs[takeCount - 2][1]\n                },\n                {\n                    X : (takeCount - 1) * x,\n                    Y : ixs[takeCount - 1][2]\n                },\n                {\n                    X : (takeCount - 2) * x,\n                    Y : ixs[takeCount - 2][2]\n                }\n            );\n        }\n        \n        var avg = Ext.getSlope(ixList);\n        if (isCorss && avg > 0)\n            return IndexState.Up;\n        if (isCorss && avg <0)\n            return IndexState.Down;\n        if (avg > 0)\n        {\n            return IndexState.Up;\n        }\n        else if (avg < 0)\n        {\n            return IndexState.Down;\n        }\n        else\n        {\n            return IndexState.Warn;\n        }\n    },\n    getTag:function(last){\n        var takeCount = last.length >= 4 ? 4 : last.length;        \n       \n        var ixs=[];\n       \n        for(var i=last.length-takeCount;i<last.length;i++){\n            ixs.push(last[i]);\n        }\n\n        var s= last.sort(function(a,b){\n            return a[2]-b[2];\n        });\n\n        var max = s[s.length-1][2];\n        var min = s[0][2];\n        var x = (max - min) / takeCount;\n\n        var ixList=[];\n        for(var j=0;j<ixs.length;j++){\n            ixList.push([j*x,ixs[j][1]]);\n        }\n\n        //判断是否有交叉，有交叉，给警告\n        if (takeCount >= 2)\n        {\n            var isCorss = Ext.isCross2(\n                {\n                    X : 0,\n                    Y : ixs[0][1]\n                },\n                {\n                    X : (takeCount - 1) * x,\n                    Y : ixs[takeCount - 1][1]\n                },\n                {\n                    X : 0,\n                    Y : ixs[0][2]\n                },\n                {\n                    X : (takeCount - 1) * x,\n                    Y : ixs[takeCount -1 ][2]\n                }\n            );       \n\n            var avg = Ext.getSlope(ixList);\n            if (isCorss && avg > 0)\n                return \"DMA金叉\";\n        }\n        return '';\n    }\n}","chart_config":"{\n    config: {\n        name:'dma',\n        labels: [\n            {\n                color: '#3D7878',\n                text: 'dma',\n                margin: 40\n            },\n            {\n                color: '#FF8000',\n                text: 'ama',\n                margin: 40\n            }\n        ],\n        titleConfig: {\n            title: 'DMA',\n            x: 120\n        },\n         store: {\n            fields: [\n                { name: 'date', mapping: 0 },\n                { name: 'd1', mapping: 1 },\n                { name: 'd2', mapping: 2 }\n            ]\n        },\n        axes: [{\n            type: 'numeric',\n            position: 'left',\n            title: {\n                //text: 'Sample Values',\n                fontSize: 15\n            },\n            fields: ['d1', 'd2'],\n            style: {\n                floating: true,\n                axisLine: false,\n                strokeStyle: '#666',\n                estStepSize: 40\n            },\n            label: {\n                fillStyle: '#666',\n                fontWeight: '700'\n            },\n            grid: true\n            ,\n            background: {\n                fill: {\n                    type: 'linear',\n                    degrees: 180,\n                    stops: [\n                        {\n                            offset: 0.3,\n                            color: 'white'\n                        },\n                        {\n                            offset: 1,\n                            color: 'rgba(255,255,255,0)'\n                        }\n                    ]\n                }\n            }\n        }, {\n            type: 'category',\n            hidden: true,\n            position: 'bottom',\n            grid: true,\n            //visibleRange: [0.6, 1],\n            title: {\n                //text: 'Sample Values',\n                fontSize: 15\n            },\n            fields: 'date'\n        }],\n        series: [{\n            type: 'line',\n            xField: 'date',\n            yField: 'd1',\n            title: 'Line',\n            style: {\n                stroke: '#3D7878'\n            }\n        }, {\n            type: 'line',\n            xField: 'date',\n            yField: 'd2',\n            title: 'Line',\n            style: {\n                stroke: '#FF8000'\n            }\n        }]\n    },\n    initialize: function () {\n        var me = this;\n\n        me.callParent();\n\n        me.on('loaded', function (chart, data, range) {\n            me.addChartThreshod(80);\n            me.addChartThreshod(20);\n        });\n        //this.on('resize',me.onChartResize);\n    }\n}","parameter":"{c1:10,c2:50,m:6}","state":1,"version":0.0,"sort":null,"group_code":"G0001","group_name":"趋向指标"},{"code":"T0006","name":"ma","description":"移动平均线","fields":"[{name:'ma1'},{name:'ma2'},{name:'ma3'},{name:'ma4'}]","table_name":"ma","algorithm_script":"{\n    c1: 5,\n    c2: 10,\n    c3: 20,\n    c4: 60,\n    ma1: [],\n    ma2: [],\n    ma3: [],\n    ma4: [],\n    i: 0,\n    data: [],\n    calculate: function (newData) {\n        var me = this;\n\n        //data格式，\n        //e[0],//日期\n        //e[1],//开盘 \n        //e[2],//收盘\n        //e[3],//最高\n        //e[4],//最低   \n        //e[5],//成交量\n        //e[6],//涨跌额\n        //e[7],//涨跌幅\n\n        //dif=10日均线-50日均线\n        //ama=10日均线\n        //debugger;\n\n\n        for (var j = 0; j < newData.length; j++) {\n            me.data.push(newData[j]);\n        }\n        var ma = [];\n        var price = [];\n        for (me.i; me.i < me.data.length; me.i++) {\n\n            var a = me.getAvg(me.c1, me.data, me.i);\n            me.ma1.push(a);\n\n            a = me.getAvg(me.c2, me.data, me.i);\n            me.ma2.push(a);\n\n            a = me.getAvg(me.c3, me.data, me.i);\n            me.ma3.push(a);\n\n            a = me.getAvg(me.c4, me.data, me.i);\n            me.ma4.push(a);\n\n            ma.push([me.data[me.i][0], me.ma1[me.i].toFixed(2), me.ma2[me.i].toFixed(2), me.ma3[me.i].toFixed(2), me.ma4[me.i].toFixed(2)]);\n        }\n        return ma;\n    },\n    cutdownContext: function (count) {\n        var me = this;\n        if (count == 0 || count == 1) {\n            me.data = [];\n            me.ma1 = [];\n            me.ma2 = [];\n            me.ma3 = [];\n            me.ma4 = [];\n            me.i = 0;\n        } else {\n            me.ma1.splice(0, me.i - count);\n            me.ma2.splice(0, me.i - count);\n            me.ma3.splice(0, me.i - count);\n            me.ma4.splice(0, me.i - count);\n            me.data.splice(0, me.i - count);\n            me.i = count;\n        }\n    },\n    getAvg: function (c1, data, i) {\n        if (i >= c1) {\n            var n = 0;\n            for (var j = 0; j < c1; j++) {\n                n += data[i - j][2];\n            }\n            return n / c1;\n        } else {\n            return data[i][2];\n        }\n    },   \n    getState: function (last) {\n        var takeCount = last.length >= 4 ? 4 : last.length;\n\n        var ixs = [];\n\n        for (var i = last.length - takeCount; i < last.length; i++) {\n            ixs.push(last[i]);\n        }\n\n        var s = last.sort(function (a, b) {\n            return a[2] - b[2];\n        });\n\n        var max = s[s.length - 1][2];\n        var min = s[0][2];\n        var x = (max - min) / takeCount;\n\n        var ixList = [];\n        for (var j = 0; j < ixs.length; j++) {\n            ixList.push([j * x, ixs[j][1]]);\n        }\n\n        //判断是否有交叉，有交叉，给警告\n        var isCorss = false;\n        if (takeCount >= 2) {\n            isCorss = Ext.isCross(\n                {\n                    X: (takeCount - 1) * x,\n                    Y: ixs[takeCount - 1][1]\n                },\n                {\n                    X: (takeCount - 2) * x,\n                    Y: ixs[takeCount - 2][1]\n                },\n                {\n                    X: (takeCount - 1) * x,\n                    Y: ixs[takeCount - 1][2]\n                },\n                {\n                    X: (takeCount - 2) * x,\n                    Y: ixs[takeCount - 2][2]\n                }\n            );\n        }\n\n        var avg = Ext.getSlope(ixList);\n        if (isCorss && avg > 0)\n            return IndexState.Up;\n        if (isCorss && avg < 0)\n            return IndexState.Down;\n        if (avg > 0) {\n            return IndexState.Up;\n        }\n        else if (avg < 0) {\n            return IndexState.Down;\n        }\n        else {\n            return IndexState.Warn;\n        }\n    },\n    getTag: function (last) {\n       \n        var takeCount = last.length >= 4 ? 4 : last.length;\n\n        var ixs = [];\n\n        for (var i = last.length - takeCount; i < last.length; i++) {\n            ixs.push(last[i]);\n        }\n\n        var s = last.sort(function (a, b) {\n            return a[2] - b[2];\n        });\n\n        var max = s[s.length - 1][2];\n        var min = s[0][2];\n        var x = (max - min) / takeCount;\n\n        var ixList = [];\n        for (var j = 0; j < ixs.length; j++) {\n            ixList.push([j * x, ixs[j][1]]);\n        }\n\n        //判断是否有交叉，有交叉，给警告\n        if (takeCount >= 2) {\n            var avg = Ext.getSlope(ixList);\n            if(avg<0)\n                return '';\n            var v5=ixs[takeCount - 1][1];\n            var v10=ixs[takeCount - 1][2];\n            var v20=ixs[takeCount - 1][3];\n            var v60=ixs[takeCount - 1][4];\n            //5日叉10日\n            if(v60>v20&&v20>v10&&v10>=v5){\n                var v10_5=v10-v5;\n                if(v10_5>=0&&v10_5<0.5){\n                    return \"均线5叉10\";\n                }\n            }\n\n            //5日叉20日\n            if(v60>v20&&v20>v10&&v5>v10&&v5<=v20){\n                var v20_5=v20-v5;\n                if(v20_5>=0&&v20_5<0.5){\n                    return \"均线5叉20\";\n                }\n            }\n            //5日叉60日\n            if(v60>v20&&v20>v10&&v5>v20&&v5<=v60){\n                var v60_5=v60-v5;\n                if(v60_5>=0&&v60_5<1){\n                    return \"均线5叉60\";\n                }\n            }\n            //10日叉60日\n            if(v60>v20&&v10>v20&&v10<=v60){\n                var v60_10=v60-v10;\n                if(v60_10>=0&&v60_10<1){\n                    return \"均线10叉60\";\n                }\n            }          \n        \n        }\n        return '';\n    }\n}","chart_config":"{\n    config: {\n        name:'ma',\n        labels: [\n            {\n                color: '#FF0080',\n                text: '5',\n                margin: 35\n            },\n            {\n                color: '#E1E100',\n                text: '10',\n                margin: 35\n            },\n            {\n                color: '#3D7878',\n                text: '20',\n                margin: 35\n            },\n            {\n                color: '#FF8000',\n                text: '60',\n                margin: 35\n            }\n        ],\n        titleConfig: {\n            title: 'MA',\n            x: 150\n        },\n        store: {\n                fields: [\n                    { name: 'date', mapping: 0 },\n                    { name: 'ma1', mapping: 1 },\n                    { name: 'ma2', mapping: 2 },\n                    { name: 'ma3', mapping: 3 },\n                    { name: 'ma4', mapping: 4 }\n                ]\n        },\n        axes: [{\n            type: 'numeric',\n            position: 'left',\n            title: {\n                //text: 'Sample Values',\n                fontSize: 15\n            },\n            fields: ['ma1', 'ma2', 'ma3', 'ma4'],\n            style: {\n                floating: true,\n                axisLine: false,\n                strokeStyle: '#666',\n                estStepSize: 40\n            },\n            label: {\n                fillStyle: '#666',\n                fontWeight: '700'\n            },\n            grid: true\n            ,\n            background: {\n                fill: {\n                    type: 'linear',\n                    degrees: 180,\n                    stops: [\n                        {\n                            offset: 0.3,\n                            color: 'white'\n                        },\n                        {\n                            offset: 1,\n                            color: 'rgba(255,255,255,0)'\n                        }\n                    ]\n                }\n            }\n        }, {\n            type: 'category',\n            hidden: true,\n            position: 'bottom',\n            grid: true,\n            //visibleRange: [0.6, 1],\n            title: {\n                //text: 'Sample Values',\n                fontSize: 15\n            },\n            fields: 'date'\n        }],\n        series: [\n            {\n                type: 'line',\n                xField: 'date',\n                yField: 'ma1',\n                title: 'Line',\n                style: {\n                    smooth: true,\n                    stroke: '#FF0080'\n                }\n            },\n            {\n                type: 'line',\n                xField: 'date',\n                yField: 'ma2',\n                title: 'Line',\n                style: {\n                    smooth: true,\n                    stroke: '#E1E100'\n                }\n            },\n            {\n                type: 'line',\n                xField: 'date',\n                yField: 'ma3',\n                title: 'Line',\n                style: {\n                    smooth: true,\n                    stroke: '#3D7878'\n                }\n            },\n            {\n                type: 'line',\n                xField: 'date',\n                yField: 'ma4',\n                title: 'Line',\n                style: {\n                    smooth: true,\n                    stroke: '#FF8000'\n                }\n            }\n        ]\n    },\n    initialize: function () {\n        var me = this;\n\n        me.callParent();\n\n    }\n}","parameter":"{c1:5,c2:10,c3:20,c3:60}","state":1,"version":0.0,"sort":null,"group_code":"G0001","group_name":"趋向指标"}];

var {
  techLocal
}=require('./dataLocal');

class TechActions {  
  loadMyTechData(){
  	var me=this
  	//
  	techLocal.get(function (err,data) {
  		me.dispatch(data);
  	});
    	
  }
  loadTechData(){
  	  	this.dispatch(techs);
  }
  
}
module.exports = alt.createActions(TechActions); ;  

